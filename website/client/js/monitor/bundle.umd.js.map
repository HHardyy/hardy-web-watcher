{"version":3,"file":"bundle.umd.js","sources":["../../../../sdk/perf.js","../../../../sdk/index.js"],"sourcesContent":["/*\r\n * @Author: 小方块 \r\n * @Date: 2022-03-07 02:02:35 \r\n * @Last Modified by: 小方块\r\n * @Last Modified time: 2022-03-10 16:23:50\r\n * \r\n * 页面性能\r\n*/\r\nexport default {\r\n  init: (cb) => {\r\n    let isDOMReady = false\r\n    let isOnload = false\r\n    let cycleTime = 100\r\n\r\n    const Util = {\r\n      _getPerformanceTiming: () => {\r\n        return window.performance.timing || window.performance.timeOrigin\r\n      },\r\n      _getPerfData: (pt) => {\r\n        let data = {\r\n          // 网络建立\r\n          prevPage: { time: pt.fetchStart - pt.navigationStart, label: '上一个页面时间' },\r\n          redirect: { time: pt.redirectEnd - pt.redirectStart, label: '重定向时间' },\r\n          dns: { time: pt.domainLookupEnd - pt.domainLookupStart, label: 'DNS查找时间' },\r\n          connect: { time: pt.connectEnd - pt.connectStart, label: 'TCP建连时间' },\r\n          network: { time: pt.connectEnd - pt.navigationStart, label: '网络总耗时' },\r\n\r\n          // 网络接受\r\n          send: { time: pt.responseStart - pt.requestStart, label: '前端发送到接收的时间' },\r\n          receive: { time: pt.responseEnd - pt.responseStart, label: '接收数据用时' },\r\n          request: { time: pt.responseEnd - pt.requestStart, label: '请求页面的总耗时' },\r\n\r\n          // 渲染阶段\r\n          dom: { time: pt.domComplete - pt.domLoading, label: 'dom解析时间' },\r\n          loadEvent: { time: pt.loadEventEnd - pt.loadEventStart, label: 'loadEvent时间' },\r\n          frontEnd: { time: pt.loadEventEnd - pt.domLoading, label: '前端总时间' },\r\n\r\n          // 关键阶段\r\n          load: { time: pt.loadEventEnd - pt.navigationStart, label: '页面完全加载时间' },\r\n          domReady: { time: pt.domContentLoadedEventStart - pt.navigationStart, label: 'dom准备时间' },\r\n          interactive: { time: pt.domInteractive - pt.navigationStart, label: '可操作时间' },\r\n          ttfb: { time: pt.responseStart - pt.navigationStart, label: '首字节时间' }\r\n        }\r\n        return data\r\n      },\r\n      // dom渲染完成\r\n      _domReady: (callback) => {\r\n        if (isDOMReady === true) return void 0\r\n        let timer = null\r\n        const _runCheck = () => {\r\n          if (Util._getPerformanceTiming().domComplete) {\r\n            clearTimeout(timer) // 监测到了， 停止监测\r\n            isDOMReady = true\r\n            callback(document.readyState)\r\n          } else {  // 一直监测 \r\n            timer = setTimeout(_runCheck, cycleTime);\r\n          }\r\n        }\r\n        // document.addEventListener('readystatechange', () => {\r\n        //   if (document.readyState === 'interactive') {\r\n        //     if (typeof callback === 'function') callback(document.readyState)\r\n        //     return void 0\r\n        //   }\r\n        // })\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n          _runCheck()\r\n          return void 0\r\n        })\r\n      },\r\n\r\n      _onLoad: (callback) => {\r\n        if (isOnload === true) return void 0\r\n        let timer = null\r\n\r\n        const _runCheck = () => {\r\n          if (Util._getPerformanceTiming().loadEventEnd) {\r\n            clearTimeout(timer)\r\n            isOnload = true\r\n            callback(document.readyState)\r\n          } else {\r\n            timer = setTimeout(_runCheck, cycleTime);\r\n          }\r\n        }\r\n        // document.addEventListener('readystatechange', () => {\r\n        //   if (document.readyState === 'interactive') {\r\n        //     if (typeof callback === 'function') callback(document.readyState)\r\n        //     return void 0\r\n        //   }\r\n        // })\r\n        window.addEventListener('load', () => {\r\n          _runCheck()\r\n          return void 0\r\n        })\r\n      },\r\n    }\r\n\r\n    Util._domReady((state) => {\r\n      let perfData = Util._getPerfData(Util._getPerformanceTiming())\r\n      perfData.type = 'domready'\r\n      cb(perfData)\r\n    })\r\n    Util._onLoad((state) => {\r\n      let perfData = Util._getPerfData(Util._getPerformanceTiming())\r\n      perfData.type = 'onload'\r\n      cb(perfData)\r\n    })\r\n  }\r\n}","import perf from './perf.js'\r\n\r\nperf.init((perfData) => {\r\n  console.log('perf: ', perfData);\r\n})\r\n"],"names":[],"mappings":"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"}